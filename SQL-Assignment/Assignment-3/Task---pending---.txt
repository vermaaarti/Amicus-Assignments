--9. display the task that is 'in progress'

SELECT Task FROM EmpProjectTasks_aarti WHERE Status = 'In Progress';



--10. display employee name and salary in descending order of salary

SELECT Ename, Salary FROM Employees_aarti ORDER BY Salary DESC;



--11. display task in ascending order of end date

SELECT Task, EndDate FROM EmpProjectTasks_aarti ORDER BY EndDate ASC;



--12. display distinct jobs from Employees table

SELECT DISTINCT Job FROM Employees_aarti;



--13. display employee names in all uppercase

SELECT UPPER(Ename) AS UppercaseName FROM Employees_aarti;



--14. display employee name, salary and bonus calculated as 25% of salary

SELECT Ename, Salary, Salary * 0.25 AS Bonus FROM Employees_aarti;



--15. display concatenated string 'Employee works as job'(e.g. Manoj works as Develpoer) for all employees 

SELECT CONCAT(Ename, ' works as ', Job) AS EmployeeJob FROM Employees_aarti;



--16. Display day of week (e.g. Friday) for each start date of projects

SELECT StartDate, DATENAME(dw, StartDate) AS DayOfWeek FROM Projects_aarti;



--17. Display position number of '@' symbol in each email id of clients 

SELECT Email, CHARINDEX('@', Email) AS AtSymbolPosition FROM Clients_aarti;



--18. Display first 3 characters of each client name

SELECT LEFT(Cname, 3) AS FirstThreeCharacters FROM Clients_aarti;



--19. Display project budget values formatted as '$150,000'

SELECT CONCAT('$', FORMAT(Budget, 'N0')) AS FormattedBudget FROM Projects_aarti;



--20. Display planned end date and review date as 3 months after planned end date for each project

SELECT PlannedEndDate, DATEADD(MONTH, 3, PlannedEndDate) AS ReviewDate FROM Projects_aarti;










--1. Display count of client 

SELECT COUNT(*) AS ClientCount FROM Clients_aarti;



--2. Display count of employees and sum of their salaries

SELECT COUNT(*) AS EmployeeCount, SUM(Salary) AS TotalSalary FROM Employees_aarti;



--3. Display max salary per department

SELECT Deptno, MAX(Salary) AS MaxSalary FROM Employees_aarti GROUP BY Deptno;



--4. Display min salary per job

SELECT Job, MIN(Salary) AS MinSalary FROM Employees_aarti GROUP BY Job;



--5. Display average salary 

SELECT AVG(Salary) AS AverageSalary FROM Employees_aarti;



--6. Display sum of budget

SELECT SUM(Budget) AS TotalBudget FROM Projects_aarti;




--7. Display count of 'coding' task

SELECT COUNT(*) AS CodingTaskCount FROM EmpProjectTasks_aarti WHERE Task = 'Coding';




--8. Display department wise count and sum of salary of employees

SELECT Deptno, COUNT(*) AS EmployeeCount, SUM(Salary) AS TotalSalary FROM Employees_aarti GROUP BY Deptno;



--9. Display client names and their project desc, start date and budget

SELECT C.Cname AS ClientName, P.Descr AS ProjectDescription, P.StartDate, P.Budget FROM Clients_aarti AS C INNER JOIN Projects_aarti 
AS P ON C.ClientID = P.ClientID;



--10. Display department name, employee name and job

SELECT D.Dname AS DepartmentName, E.Ename AS EmployeeName, E.Job FROM Employees_aarti AS E INNER JOIN Departments_aarti AS D ON E.Deptno = D.Deptno;



--11. Display names of employees doing 'System Analysis' along with project name

SELECT E.Ename AS EmployeeName, P.Descr AS ProjectName FROM Employees_aarti AS E
INNER JOIN EmpProjectTasks_aarti AS T ON E.Empno = T.Empno INNER JOIN Projects_aarti AS P ON T.ProjectID = P.ProjectID
WHERE T.Task = 'System Analysis';



--12. Display job wise count

SELECT Job, COUNT(*) AS JobCount FROM Employees_aarti GROUP BY Job;



--13. Display employee numbers not present in EmpProjectTasks table necessary set operator

SELECT Empno FROM Employees_aarti

EXCEPT

SELECT Empno FROM EmpProjectTasks_aarti;




--14. Display employee numbers present in both Employees and EmpProjectTasks table using necessary set operator

SELECT Empno FROM Employees_aarti

INTERSECT

SELECT Empno FROM EmpProjectTasks_aarti;



--15. Display all employee numbers present in both Employees and EmpProjectTasks table using necessary set operator

SELECT E.Empno FROM Employees_aarti AS E INNER JOIN EmpProjectTasks_aarti AS T ON E.Empno = T.Empno;



























--1. Display the project name with highest budget

SELECT ProjectName FROM Projects_aarti WHERE Budget = (SELECT MAX(Budget) FROM Projects_aarti);




--2. Display employee names who have the same job as Madhav

SELECT Ename FROM Employees_aarti WHERE Job = (SELECT Job FROM Employees_aarti WHERE Ename = 'Madhav');



--3. Display employee's name and job who worked on 'Code Change' task of project 401

SELECT E.Ename, E.Job
FROM Employees_aarti AS E INNER JOIN EmpProjectTasks_aarti AS T ON E.Empno = T.Empno WHERE T.ProjectID = 401 AND T.Task = 'Code Change';



--4. Display client name whose project's 'Coding' task is 'in progress' 

SELECT C.Cname FROM Clients_aarti AS C 
INNER JOIN Projects_aarti AS P ON C.ClientID = P.ClientID
INNER JOIN EmpProjectTasks_aarti AS T ON P.ProjectID = T.ProjectID
WHERE T.Task = 'Coding' AND T.Status = 'In Progress';




--5. Display department number, names and salaries of employees who are earning max salary in their departments

SELECT E.Deptno, D.Dname, E.Salary FROM Employees_aarti AS E INNER JOIN Departments_aarti AS D ON E.Deptno = D.Deptno
WHERE (E.Deptno, E.Salary) IN ( ELECT Deptno, MAX(Salary) FROM Employees_aarti GROUP BY Deptno );



--6. Display name of department with highest SUM of salary

SELECT D.Dname FROM Departments_aarti AS D
INNER JOIN (
    SELECT Deptno, SUM(Salary) AS TotalSalary
    FROM Employees_aarti
    GROUP BY Deptno
    HAVING SUM(Salary) = (
        SELECT MAX(TotalSalary)
        FROM (
            SELECT Deptno, SUM(Salary) AS TotalSalary
            FROM Employees_aarti
            GROUP BY Deptno
        ) AS Subquery
    )
) AS MaxSalaryDept ON D.Deptno = MaxSalaryDept.Deptno;




--7. Create a table named 'CLIENT_PROJECTS' using CTAS method that includes CLIENT_ID, CNAME, ADDRESS, BUSINESS, DESCR, 
BUDGET columns from CLIENTS and PROJECTS table

CREATE TABLE CLIENT_PROJECTS AS
SELECT
    C.ClientID,
    C.Cname,
    C.Address,
    C.Business,
    P.Descr,
    P.Budget
FROM Clients_aarti AS C
INNER JOIN Projects_aarti AS P ON C.ClientID = P.ClientID;



--8. increase salary of employees by 15% who have performed task of 'Testing' on projects

UPDATE Employees_aarti SET Salary = Salary * 1.15
WHERE Empno IN (
    SELECT DISTINCT E.Empno
    FROM Employees_aarti AS E
    INNER JOIN EmpProjectTasks_aarti AS T ON E.Empno = T.Empno
    WHERE T.Task = 'Testing'
);



--9. Create a view named DEPT_EMP with DEPTNO, DNAME, LOC, ENAME, JOB and SALARY columns

CREATE VIEW DEPT_EMP AS
SELECT
    D.Deptno,
    D.Dname,
    D.Loc,
    E.Ename,
    E.Job,
    E.Salary
FROM Departments_aarti AS D
INNER JOIN Employees_aarti AS E ON D.Deptno = E.Deptno;






































